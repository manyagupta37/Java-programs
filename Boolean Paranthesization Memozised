//{ Driver Code Starts
//Initial Template for Java

import java.io.*;
import java.util.*;

class GFG{
    public static void main(String args[])throws IOException
    {
        BufferedReader in = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(in.readLine());
        while(t-- > 0){
            int N = Integer.parseInt(in.readLine());
            String S = in.readLine();
            
            Solution ob = new Solution();
            System.out.println(ob.countWays(N, S));
        }
    }
}
// } Driver Code Ends


//User function Template for Java

class Solution{
    static Map<String, Integer> mp;
    static int countWays(int n, String s){
        mp=new HashMap<>();
        // code here
        return func(s,0,s.length()-1,true);
    }
    static int func(String s,int i,int j,boolean isTrue)
    {
        
        if(i>j)
        {
            return 0;
        }
        if(i==j)
        {
            if(isTrue)
            {
                return s.charAt(i)=='T' ? 1:0;
            }
            else
            {
                return s.charAt(i)=='F'? 1:0;
            }
                
        }
        
        StringBuilder temp=new StringBuilder();
        temp.append(i).append(" ").append(j).append(" ").append(isTrue);
        String key=temp.toString();
        if(mp.containsKey(key))
        {
            return mp.get(key);
        }
        int ans=0;
        
        for(int k=i+1;k<=j-1;k+=2)
        {
            int lt=func(s,i,k-1,true);
            int lf=func(s,i,k-1,false);
            int rt=func(s,k+1,j,true);
            int rf=func(s,k+1,j,false);
            if(s.charAt(k)=='&')
            {
                if(isTrue)
                {
                    ans+=lt*rt;
                }
                else
                {
                    ans+=lt*rf + lf*rt + lf*rf;
                }
            }
            else if(s.charAt(k)=='|')
            {
                if(isTrue==true)
                {
                    ans+=lt*rt + lt*rf + lf*rt;
                }
                else
                {
                    ans+=lf*rf;
                }
            }
            if(s.charAt(k)=='^')
            {
                if(isTrue==true)
                {
                    ans+=lt*rf + lf*rt;
                }
                else
                {
                    ans+=lt*rt + lf*rf;
                }
            }
        }
        mp.put(key,ans);
        return ans;
    }
}
