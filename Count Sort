package DSA3.BinaryTrees;

import java.util.Arrays;

public class CountSort {
    public static void main(String[] args) {
        int []arr={6,2,9,1,3,2,9};
        countSort(arr);
        System.out.println(Arrays.toString(arr));
    }

    public static void countSort(int[]arr)
    {
        if(arr==null || arr.length<=1)
        {
            return;
        }

        int max=arr[0];
        for(int i=0;i<arr.length;i++){
            if(arr[i]>max){
                max=arr[i];
            }
        }

        int []countArray = new int[max+1];
        for(int num:arr)
        {
            countArray[num]++;
        }

        int index=0;
        for(int i=0;i<=max;i++)
        {
            while(countArray[i]>0){
                arr[index]=i;
                index++;
                countArray[i]--;
            }

        }
    }
}
