class Solution {
    public String decodeString(String s) {
        Stack<Integer> number = new Stack<>();
        Stack<String> chars= new Stack<>();
        for(int i=0;i<s.length();i++)
        {
            char ch=s.charAt(i);
            if(ch>='0' && ch<='9')
            {
                int num=0;
                while(i<s.length() && s.charAt(i)>='0' && s.charAt(i)<='9')
                {
                    num=num*10 + (int)(s.charAt(i)-'0');
                    i++;
                }
                i--;
                number.push(num);
            }
            else if(ch!=']')
            {
                chars.push(ch+"");
            }
            else 
            {
                String str="";
                while(!chars.peek().equals("["))
                {
                    str=chars.pop()+str;
                }
                chars.pop();
                int repeat=number.pop();
                StringBuilder sb=new StringBuilder("");
                while(repeat>0)
                {
                    sb.append(str);
                    repeat--;

                }
                chars.push(sb.toString());

            }
        
        }
        StringBuilder ans=new StringBuilder("");
            while(chars.size()>0)
            {
                ans.insert(0,chars.pop());
            }
         return ans.toString();
    }
}
