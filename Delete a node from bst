class Tree {
    // Function to delete a node from BST.
    public static Node deleteNode(Node root, int X) {
        // code here.
        
        if(root==null)
        {
            return null;
        }
        
        if(root.data>X)
        {
            root.left=deleteNode(root.left,X);
        }
        else if(root.data<X)
        {
            root.right= deleteNode(root.right,X);
        }
        else
        {
            
            //case1 leaf node
            if(root.left==null && root.right==null)
            {
                return null;
            }
            
            //case2 only one child
            if(root.left==null)
            {
                return deleteNode(root.right,X);
            }
            else if(root.right==null)
            {
                return deleteNode(root.left,X);
            }
            
            //case3 both childern
            Node IS=inorderSuccessor(root.right);
            root.data=IS.data;
            root.right=deleteNode(root.right,IS.data);
        }
        return root;
    }
    
    public static Node inorderSuccessor(Node root)
    {
        while(root.left!=null)
        {
            root=root.left;
        }
        return root;
    }
}
