public int findPaths(Node node, int sum)
{
List<Integer>path=new List<>();
return helper(node,sum,path);
}
public int helper(Node node,int sum,List<Integer>path)
{
if(node==null){
return 0;}
path.add(node.val);
int count=0;
int s=0;
ListIterator<Integer>itr=new ListIterator(path.size());
while(itr.hasPrevious){
s+=itr.previous();
if(s==sum){
count++;
}
}
count+=helper(node.left,sum,path)+helper(node.right,sum,path);

path.remove(path.size()-1);
return count;
}
