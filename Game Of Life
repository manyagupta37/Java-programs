class Solution {
    public void gameOfLife(int[][] board) {
        int n=board.length;
        int m=board[0].length;
       
         int[][] copy=new int[n][m];
         for(int i=0;i<n;i++)
         {
            for(int j=0;j<m;j++)
            {
                copy[i][j]=board[i][j];
            }
         }

         for(int i=0;i<n;i++)
         {
            for(int j=0;j<m;j++)
            {
                int live=findLive(i,j,copy);
                if(copy[i][j]==1)
                {
                    if(live<2 || live>3)
                    {
                        board[i][j]=0;
                    }
                }
                else
                {
                    if(live==3)
                    {
                        board[i][j]=1;
                    }
                }
            }
         }


    
    }
    public int findLive(int i,int j,int[][]board)
    {
        int live=0;
        if(i+1<board.length && board[i+1][j]==1)
        {
            live++;
        }
        if(j+1<board[0].length && board[i][j+1]==1)
        {
            live++;
        }
        if(i-1>=0 && board[i-1][j]==1)
        {
            live++;
        }
        if(j-1>=0 && board[i][j-1]==1)
        {
            live++;
        }
        if(i+1<board.length && j+1<board[0].length && board[i+1][j+1]==1)
        {
            live++;
        }
        if(i+1<board.length && j-1>=0 && board[i+1][j-1]==1)
        {
            live++;
        }
        if(i-1>=0 && j+1<board[0].length && board[i-1][j+1]==1)
        {
            live++;
        }
        if(i-1>=0 && j-1>=0 && board[i-1][j-1]==1)
        {
            live++;
        }
        return live;
    }
}
