/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int maxLevelSum(TreeNode root) {
        if(root==null)
        {
            return 0;
        }

        int maxSum=Integer.MIN_VALUE;
        int maxLevel=0;
        int currLevel=1;

        Queue<TreeNode>qu=new LinkedList<>();
        qu.add(root);

        while(!qu.isEmpty())
        {
            int levelSize=qu.size();
            int sum=0;

            for(int i=0;i<levelSize;i++)
            {
                TreeNode node=qu.poll();
                sum+=node.val;

                if(node.left!=null)
                {
                    qu.add(node.left);

                }
                if(node.right!=null)
                {
                    qu.add(node.right);
                }
            }
            if(sum>maxSum)
            {
                maxSum=sum;
                maxLevel=currLevel;
            }
            currLevel++;
        }
        return maxLevel;

    }
}
