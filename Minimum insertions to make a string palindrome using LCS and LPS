
class Solution{
    int[][]t;
    int findMinInsertions(String S){
        // code here
        return S.length()-LPS(S);
    }
    int LPS(String str)
    {
        String s1=new StringBuilder(str).reverse().toString();
        return LCS(str,s1,str.length(),s1.length());
    }
    
    int LCS(String a, String b, int n, int m)
    {
        n=a.length();
        m=b.length();
        t=new int[n+1][m+1];
        for(int i=0;i<=n;i++)
        {
            for(int j=0;j<=m;j++)
            {
                if(i==0 || j==0)
                {
                    t[i][j]=0;
                }
            }
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(a.charAt(i-1)==b.charAt(j-1))
                {
                    t[i][j]=1+t[i-1][j-1];
                }
                else
                {
                    t[i][j]=Math.max(t[i][j-1],t[i-1][j]);
                }
            }
        }
        return t[n][m];
    }
}
