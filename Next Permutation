class Solution {
    public void nextPermutation(int[] nums) {
        int pivot=-1;
        for(int i=nums.length-2;i>=0;i--)
        {
            if(nums[i]<nums[i+1])
            {
                pivot=i;
                break;
            }
            
        }
        if(pivot==-1)
        {
            int i=0;
            int j=nums.length-1;
            while(i<j)
            {
                swap(nums,i,j);
                i++;
                j--;
            }
            return;
        }
        for(int i=nums.length-1;i>pivot;i--)
        {
            if(nums[i]>nums[pivot])
            {
                swap(nums,i,pivot);
                break;
            }
        }
        

        int m=pivot+1;
        int n=nums.length-1;
        while(m<=n)
        {
            swap(nums,m,n);
            m++;
            n--;
        }
    }
    public void swap(int[]arr,int i,int j)
    {
        int temp=arr[i];
        arr[i]=arr[j];
        arr[j]=temp;
    }
}
