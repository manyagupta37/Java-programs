class Solution {
    public boolean canPartition(int[] nums) {
        int sum=0;
        for(int i=0;i<nums.length;i++)
        {
        sum+=nums[i];
        }
        if(sum%2!=0)
        {
        return false;
        }
        else
        {
            return subsetSum(nums,sum/2,nums.length);
        }
        
    }
    public boolean subsetSum(int []nums,int sum, int N)
    {
    boolean [][]t=new boolean[N+1][sum+1];
    for(int i=0;i<=N;i++)
    {
        t[i][0]=true;
    }
    for(int j=0;j<=sum;j++){
    t[0][j]=false;
   
    }

    for(int i=1;i<=N;i++)
    {
    for(int j=1;j<=sum;j++)
    {
    if(nums[i-1]<=j)
    {
    t[i][j]=t[i-1][j-nums[i-1]] || t[i-1][j];
    }
    else
    {
    t[i][j]=t[i-1][j];
    }
    
    }
    
}
return t[N][sum];
}

}
