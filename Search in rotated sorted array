class Solution {
    public void main(String[]args)
    {
        int []nums={4,5,6,7,0,1,2};
        int target=0;
        int res=new Solution().search(nums,target);
        System.out.println(res);
    }
    public int search(int[] nums, int target) {
        int pivot=find_pivot(nums);
        if(pivot==-1)
        {
            return bs(nums,target,0,nums.length-1);
        }
        if(nums[pivot]==target)
        {
            return pivot;
        }
        if(target>=nums[0])
        {
            return bs(nums,target,0,pivot-1);
        }
        else
        {
            return bs(nums,target,pivot+1,nums.length-1);
        }
    }
    public int bs(int []nums,int target,int s,int e)
    {
        while(s<=e)
        {
            int m=s+(e-s)/2;
            if(target == nums[m])
            {
                return m;
            }
            else if(target<nums[m])
            {
                e=m-1;
            }
            else
            {
                s=m+1;
            }
            
        }
        return -1;
    }
    public int find_pivot(int []nums)
    {
        int s=0;
        int e=nums.length-1;
        while(s<=e)
        {
            int m=s+(e-s)/2;
            if(m<e && nums[m]>nums[m+1])
            {
                return m;
            }
            if(m>s && nums[m]<nums[m-1])
            {
                return m;
            }
            if(nums[s]>=nums[m])
            {
                e=m-1;
            }
            else
            {
                s=m+1;
            }
        }
        return -1;
    }
}
