class GFG
{
    //Function to store the zig zag order traversal of tree in a list.
	ArrayList<Integer> zigZagTraversal(Node root)
	{
	    //Add your code here.
	    ArrayList<Integer> res=new ArrayList<>();
	    if(root==null)
	    {
	        return res;
	    }
	    int level=levels(root);
	    for(int i=1;i<=level;i++)
	    {
	        ArrayList<Integer>list=new ArrayList<>();
	        if(i%2!=0)
	        {
	           nthLevel1(root,i,list);
	           
	        }
	        else
	        {
	            nthLevel2(root,i,list);
	            
	        }
	        res.addAll(list);
	    }
	    return res;
	}
	void nthLevel1(Node root,int n,ArrayList<Integer>list)
	{
	    if(root==null)
	    {
	        return;
	    }
	    if(n==1)
	    {
	        list.add(root.data);
	        return;
	    }
	    
	    nthLevel1(root.left,n-1,list);
	    nthLevel1(root.right,n-1,list);
	}
	void nthLevel2(Node root,int n,ArrayList<Integer>list)
	{
	    if(root==null)
	    {
	        return;
	    }
	    if(n==1)
	    {
	        list.add(root.data);
	        return;
	    }
	    
	    nthLevel2(root.right,n-1,list);
	    nthLevel2(root.left,n-1,list);
	}
	int height(Node root)
	{
	    if(root==null)
	    {
	        return -1;
	    }
	    
	    int lh=height(root.left);
	    int rh=height(root.right);
	    
	    return Math.max(lh,rh)+1;
	}
	
	int levels(Node root)
	{
	    return height(root)+1;
	}

}
